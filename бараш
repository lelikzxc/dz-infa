# функция, которая убирает k цифр из числа n так, чтобы получилось наибольшее число
def remove_digits(n, k):
  # преобразуем число в строку
  n = str(n)
  # если k равно или больше длины числа, то возвращаем 0
  if k >= len(n):
    return 0
  # инициализируем результат пустой строкой
  result = ""
  # инициализируем индекс начала поиска максимальной цифры 0
  start = 0
  # инициализируем индекс конца поиска максимальной цифры длиной числа минус k
  end = len(n) - k
  # повторяем k + 1 раз
  for i in range(k + 1):
    # находим максимальную цифру в подстроке n[start:end + 1]
    max_digit = max(n[start:end + 1])
    # добавляем максимальную цифру к результату
    result += max_digit
    # обновляем индекс начала поиска следующей максимальной цифры как индекс первого вхождения max_digit в n плюс 1
    start = n.index(max_digit, start) + 1
    # обновляем индекс конца поиска следующей максимальной цифры как end плюс 1
    end += 1
  # возвращаем результат как число
  return int(result)

# вводим длину числа и количество цифр, которое нужно убрать, в одной строке
length, k = map(int, input().split())
# пока длина числа не равна 0
while length != 0:
  # вводим число, в котором нужно убрать цифры, в другой строке
  n = int(input())
  # выводим результат работы функции remove_digits
  print(remove_digits(n, k))
  # вводим длину числа и количество цифр, которое нужно убрать, в одной строке
  length, k = map(int, input().split())







def max_number(num, k):
  # num - исходное число, k - количество раз, которое нужно убрать элемент
  # преобразуем число в список цифр
  digits = [int(d) for d in str(num)]
  # создаем стек для хранения результата
  stack = []
  # проходим по списку цифр
  for d in digits:
    # пока стек не пустой и k больше нуля
    while stack and k > 0:
      # если верхний элемент стека меньше текущей цифры
      if stack[-1] < d:
        # удаляем верхний элемент стека
        stack.pop()
        # уменьшаем k на единицу
        k -= 1
      else:
        # иначе прерываем цикл
        break
    # добавляем текущую цифру в стек
    stack.append(d)
  # если k еще не равно нулю, удаляем лишние элементы с конца стека
  while k > 0:
    stack.pop()
    k -= 1
  # преобразуем стек в строку и возвращаем его как число
  return int("".join(map(str, stack)))
